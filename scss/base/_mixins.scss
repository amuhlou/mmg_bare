//
// Mixins Partials
//
// All of your mixins should go in this file.
//

@mixin clear() {
  &:before,
  &:after {
    content: '\0020';
    display: block;
    height: 0;
    overflow: hidden;
  }

  &:after {
    clear: both;
  }
}

@mixin rem($size, $attribute:font-size) {
  #{$attribute}: ($size * 10) + px;
  #{$attribute}: $size + rem;
}

@mixin rebase() {
  @include rem($base-font-size);
  color: $base-font-color;
  font-weight: normal;
  line-height: $base-line-height;
}

// From:
// smashingmagazine.com/2016/05/an-ultimate-guide-to-css-pseudo-classes-and-pseudo-elements/
@mixin link-colors ($link, $visited, $hover, $active) {
  color: $link;

  &:visited {
    color: $visited;
  }

  &:hover {
    color: $hover;
  }

  &:active,
  &:focus {
    color: $active;
  }
}

@mixin slick-defaults () {
    // Next/prev arrows
  .slick-arrow {
    @include transition(all 0.5s);
    @include box-shadow(rgba($black, 0.35) 0 0 5px);
    background-color: $white;
    background-image: image-url('play_arrow_blue.svg');
    background-position: center;
    background-repeat: no-repeat;
    background-size: 30px 30px;
    background-color: $white;
    border: 0;
    border-radius: 50%;
    height: 3rem;
    margin: 0;
    overflow: hidden;
    padding: 2rem;
    position: absolute;
    text-indent: -5555px;
    width: 3rem;
    z-index: 2;

    &:hover {
      cursor: pointer;
      background-image: image-url('play_arrow_orng.svg');
    }

    &:focus {
      outline: 0;
    }

    &.slick-prev {
      @include transform(rotate(180deg));
      left: 0;

      @media #{$small} {
        left: -2rem;
      }
    }

    &.slick-next {
      right: 0;

      @media #{$small} {
        right: -2rem;
      }
    }
  }
}

// https://css-tricks.com/snippets/sass/maintain-aspect-ratio-mixin/
@mixin aspect-ratio($width, $height) {
  position: relative;

  &:before {
    display: block;
    content: '';
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}
// scss-lint:disable ImportantRule
// visually-hidden()
// Emulates drupal element-invisible class. From the Zen theme (https://www.drupal.org/project/zen)
//
// Make an element visually hidden, but accessible to screen readers, etc.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
//
// Style guide: sass.mixins.visually-hidden
@mixin visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  word-wrap: normal;
}

// visually-hidden--off()
//
// Turns off the visually-hidden effect.
//
// Style guide: sass.mixins.visually-hidden--off
@mixin visually-hidden--off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: visible;
}

// visually-hidden--focusable()
//
// Makes an element visually hidden by default, but visible when receiving
// focus.
//
// Style guide: sass.mixins.visually-hidden--focusable
@mixin visually-hidden--focusable {
  @include visually-hidden;

  &:active,
  &:focus {
    @include visually-hidden--off;
  }
}
